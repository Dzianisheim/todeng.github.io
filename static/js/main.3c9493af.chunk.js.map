{"version":3,"sources":["api/PokeApi.js","components/routes/pokemon-board/hooks/useFetchPokemonBaseOnLocation.js","components/routes/pokemon-board/hooks/useFetchPokemons.js","components/common/PokemonAvatar.js","components/common/PokemonLink.js","components/routes/pokemon-board/PokemonBoardItem.js","components/routes/pokemon-board/PokemonBoardNavigation.js","components/routes/pokemon-board/PokemonTypes.js","components/routes/pokemon-board/hooks/useFetchPokemonTypes.js","components/routes/pokemon-board/PokemonBoard.js","components/routes/pokemon-details/pokemon-evolution-tree/PokemonEvolutionTreeJoint.js","components/routes/pokemon-details/pokemon-evolution-tree/PokemonEvolutionTree.js","components/routes/pokemon-details/hooks/useFetchEvolutionChain.js","components/routes/pokemon-details/PokemonPokedexData.js","components/routes/pokemon-details/PokemonBaseStats.js","components/routes/pokemon-details/PokemonDetails.js","components/routes/pokemon-details/hooks/useFetchPokemonDetails.js","components/AppRouter.js","components/App.js","serviceWorker.js","index.js"],"names":["apiFetch","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","subUri","response","wrap","_context","prev","next","fetch","sent","status","json","abrupt","Error","stop","_x","apply","this","arguments","getEntityIdFromUrl","url","matchResult","exec","Number","parseInt","addIdToItemsFromUrl","item","objectSpread","id","getPokemons","_ref3","_callee2","_ref2","_ref2$limit","limit","_ref2$offset","offset","resp","_context2","concat","results","map","_x2","getPokemonsByType","_ref4","_callee3","typeId","pokemons","_context3","pokemon","p","_x3","getPokemonSpecies","_ref5","_callee4","pokemonId","_context4","evolution_chain","_x4","getPokemon","_ref6","_callee5","_context5","_x5","addIdsToChainSpicies","chain","forEach","x","species","evolves_to","getPokemonEvolutionChain","_ref7","_callee6","evolutionChainId","_context6","_x6","getPokemonTypes","_ref8","_callee7","_context7","intStr","defaultValue","length","undefined","value","isNaN","useFetchPokemonBaseOnLocation","location","_useState","useState","_useState2","slicedToArray","setOffset","_useState3","_useState4","setLimit","_useState5","_useState6","typeid","setTypeid","useEffect","params","search","searchParams","queryString","parse","getParamsFromUrl","data","setData","count","setCount","loading","setLoading","then","catch","finally","useFetchPokemons","PokemonSmallAvatar","name","alt","_ref$showNumber","showNumber","otherProps","objectWithoutProperties","spriteUrl","getPokemonDefaultFrontSpriteUrl","react_default","createElement","className","assign","src","numeral","format","PokemonBoardItem","react_router_dom","to","common_PokemonAvatar","PokemonLink","_ref$limit","_ref$offset","_ref$count","hasPrevious","onPrevious","onNext","hasNext","nextSearch","prevSearch","pathname","PokemonTypeItem","PokemonTypes","pokemonTypes","setPokemonTypes","useFetchPokemonTypes","pt","PokemonTypes_PokemonTypeItem","key","withRouter","_useFetchPokemonBaseO","useFetchPokemonBaseOnUrlParams","pokemon_board_PokemonTypes","PokemonBoardNavigation","pokemon_board_PokemonBoardItem","PokemonEvolutionTreeJoint","div","c","i","PokemonEvolutionTree","useFetchEvolutionChain","pokemon_evolution_tree_PokemonEvolutionTreeJoint","Abilities","abilities","Array","isArray","sort","b","slot","ability","is_hidden","PokemonPokedexData","pokemonSpecies","languageSet","propety","language","find","getLanguageData","genera","types","t","type","join","height","meters","realFeet","feet","Math","floor","inches","round","getHeightString","pK","kg","lbs","getWeightString","weight","PokemonPokedexData_Abilities","StatsItem","_ref$maxValue","maxValue","style","width","PokemonBaseStats","stats","max","toConsumableArray","s","base_stat","PokemonBaseStats_StatsItem","stat","_useFetchPokemonDetai","setPokemonSpecies","setPokemon","Promise","all","useFetchPokemonDetails","match","react_spinners","sizeUnit","size","color","pokemon_details_PokemonPokedexData","pokemon_details_PokemonBaseStats","pokemon_details_pokemon_evolution_tree_PokemonEvolutionTree","AppRouter","children","react_router","path","component","PokemonBoard","exact","PokemonDetails","App","components_AppRouter","Boolean","window","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3c9493af.chunk.js","sourcesContent":["export const getPokemonDefaultFrontSpriteUrl = pokemonId => {\n  return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`\n}\n\nconst apiFetch = async subUri => {\n  const response = await fetch('https://pokeapi.co/api/v2' + subUri)\n\n  if (response.status === 200) {\n    return await response.json()\n  }\n\n  throw new Error('Pokeapi fetch error')\n}\n\nconst getEntityIdFromUrl = url => {\n  const matchResult = /\\/(\\d*)\\/$/.exec(url)\n  return matchResult ? Number.parseInt(matchResult[1]) : 0\n}\n\nconst addIdToItemsFromUrl = item => {\n  return { ...item, id: getEntityIdFromUrl(item.url) }\n}\n\nexport const getPokemons = async ({ limit = 20, offset = 0 }) => {\n  const resp = await apiFetch(`/pokemon/?limit=${limit}&offset=${offset}`)\n\n  resp.results = resp.results.map(addIdToItemsFromUrl)\n\n  return resp\n}\n\nexport const getPokemonsByType = async typeId => {\n  const resp = await apiFetch(`/type/${typeId}`)\n\n  const pokemons = resp.pokemon.map(p => {\n    return {\n      ...p.pokemon,\n      id: getEntityIdFromUrl(p.pokemon.url),\n    }\n  })\n\n  return pokemons\n}\n\nexport const getPokemonSpecies = async pokemonId => {\n  const resp = await apiFetch(`/pokemon-species/${pokemonId}`)\n\n  resp.id = pokemonId\n  resp.evolution_chain.id = getEntityIdFromUrl(resp.evolution_chain.url)\n\n  return resp\n}\n\nexport const getPokemon = async pokemonId => {\n  const resp = await apiFetch(`/pokemon/${pokemonId}`)\n\n  resp.id = pokemonId\n\n  return resp\n}\n\nconst addIdsToChainSpicies = chain => {\n  chain.forEach(x => {\n    x.species.id = getEntityIdFromUrl(x.species.url)\n\n    addIdsToChainSpicies(x.evolves_to || [])\n  })\n\n  return chain\n}\n\nexport const getPokemonEvolutionChain = async evolutionChainId => {\n  const resp = await apiFetch(`/evolution-chain/${evolutionChainId}`)\n  resp.id = evolutionChainId\n  resp.chain = addIdsToChainSpicies([resp.chain])[0]\n\n  return resp\n}\n\nexport const getPokemonTypes = async () => {\n  const resp = await apiFetch('/type')\n\n  resp.results = resp.results.map(addIdToItemsFromUrl)\n\n  return resp\n}\n","import { useState, useEffect } from 'react'\nimport queryString from 'query-string'\nimport useFetchPokemons from './useFetchPokemons'\n\nconst DEFAULT_OFFSET = 0\nconst DEFAULT_LIMIT = 50\n\nconst parseInt = (intStr, defaultValue = 0) => {\n  const value = Number.parseInt(intStr)\n\n  return isNaN(value) ? defaultValue : value\n}\n\nconst getParamsFromUrl = location => {\n  if (location && location.search) {\n    const searchParams = queryString.parse(location.search)\n\n    return {\n      offset: parseInt(searchParams.offset, DEFAULT_OFFSET),\n      limit: parseInt(searchParams.limit, DEFAULT_LIMIT),\n      typeId: parseInt(searchParams.typeid, 0),\n    }\n  }\n\n  return {\n    offset: DEFAULT_OFFSET,\n    limit: DEFAULT_LIMIT,\n    typeId: 0,\n  }\n}\n\nexport default location => {\n  const [offset, setOffset] = useState(0)\n  const [limit, setLimit] = useState(DEFAULT_LIMIT)\n  const [typeid, setTypeid] = useState(0)\n\n  useEffect(() => {\n    const params = getParamsFromUrl(location)\n\n    setOffset(params.offset)\n    setLimit(params.limit)\n    setTypeid(params.typeId)\n  }, [location])\n\n  return {\n    ...useFetchPokemons(offset, limit, typeid),\n    offset,\n    limit,\n    typeid,\n  }\n}\n","import { useState, useEffect } from 'react'\nimport { getPokemons, getPokemonsByType } from '../../../../api/PokeApi'\n\nexport default (offset, limit, typeid) => {\n  const [data, setData] = useState([])\n  const [count, setCount] = useState(0)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n\n    if (typeid) {\n      getPokemonsByType(typeid)\n        .then(resp => {\n          setCount(0)\n          setData(resp)\n        })\n        .catch(() => {\n          setCount(0)\n          setData([])\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    } else {\n      getPokemons({ limit, offset })\n        .then(resp => {\n          setCount(resp.count)\n          setData(resp.results)\n        })\n        .catch(() => {\n          setCount(0)\n          setData([])\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    }\n  }, [offset, limit, typeid])\n\n  return {\n    data,\n    count,\n    loading,\n  }\n}\n","import React from 'react'\nimport numeral from 'numeral'\nimport { getPokemonDefaultFrontSpriteUrl } from '../../api/PokeApi'\nimport './PokemonAvatar.scss'\n\nconst PokemonSmallAvatar = ({\n  pokemonId,\n  name,\n  alt,\n  showNumber = true,\n  ...otherProps\n}) => {\n  if (!pokemonId) return null\n\n  const spriteUrl = getPokemonDefaultFrontSpriteUrl(pokemonId)\n\n  return (\n    <div className=\"pokemon-small-avatar\">\n      <img alt={alt} {...otherProps} src={spriteUrl} />\n      {showNumber && pokemonId && (\n        <div className=\"number\">{'#' + numeral(pokemonId).format('000')}</div>\n      )}\n      {name && <div className=\"name\">{name}</div>}\n    </div>\n  )\n}\n\nexport default PokemonSmallAvatar\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport PokemonSmallAvatar from './PokemonAvatar'\n\nconst PokemonBoardItem = ({ pokemonId, ...otherProps }) => {\n  return (\n    <Link to={'/pokemon/' + pokemonId}>\n      <PokemonSmallAvatar pokemonId={pokemonId} {...otherProps} />\n    </Link>\n  )\n}\n\nexport default PokemonBoardItem\n","import React from 'react'\nimport PokemonSmallAvatar from '../../common/PokemonLink'\n\nconst PokemonBoardItem = ({ id, name }) => {\n  return <PokemonSmallAvatar name={name} pokemonId={id} />\n}\n\nexport default PokemonBoardItem\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst PokemonBoardItem = ({\n  limit = 0,\n  offset = 0,\n  count = 0,\n  onPrevious,\n  onNext,\n}) => {\n  const hasPrevious = offset !== 0\n  const hasNext = offset + limit <= count\n\n  const nextSearch = `?offset=${offset + limit}&limit=${limit}`\n  const prevSearch = `?offset=${offset - limit}&limit=${limit}`\n\n  return (\n    <div className=\"board-navigations\">\n      {hasPrevious && (\n        <Link to={{ pathname: '/pokemon', search: prevSearch }}>Previous</Link>\n      )}\n      |\n      {hasNext && (\n        <Link to={{ pathname: '/pokemon', search: nextSearch }}>Next</Link>\n      )}\n    </div>\n  )\n}\n\nexport default PokemonBoardItem\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport useFetchPokemonTypes from './hooks/useFetchPokemonTypes'\n\nconst PokemonTypeItem = ({ typeId, name }) => {\n  return (\n    <Link\n      to={{ pathname: '/pokemon', search: `?typeid=${typeId}` }}\n      className=\"pokemon-type-item\"\n    >\n      {name}\n    </Link>\n  )\n}\n\nconst PokemonTypes = ({ id, name }) => {\n  const { pokemonTypes } = useFetchPokemonTypes()\n\n  return (\n    <div className=\"pokemon-type-container\">\n      <h2>Pokemon Types</h2>\n      <div className=\"types\">\n        {pokemonTypes.map(pt => (\n          <PokemonTypeItem key={pt.id} name={pt.name} typeId={pt.id} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonTypes\n","import { useState, useEffect } from 'react'\nimport { getPokemonTypes } from '../../../../api/PokeApi'\n\nexport default (offset, limit) => {\n  const [pokemonTypes, setPokemonTypes] = useState([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n    getPokemonTypes()\n      .then(resp => {\n        setPokemonTypes(resp.results)\n      })\n      .catch(() => {\n        setPokemonTypes([])\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [offset, limit])\n\n  return {\n    pokemonTypes,\n    loading,\n  }\n}\n","import React from 'react'\nimport { withRouter } from 'react-router'\nimport useFetchPokemonBaseOnUrlParams from './hooks/useFetchPokemonBaseOnLocation'\nimport PokemonBoardItem from './PokemonBoardItem'\nimport PokemonBoardNavigation from './PokemonBoardNavigation'\nimport PokemonTypes from './PokemonTypes'\nimport './PokemonBoard.scss'\n\nconst PokemonBoard = ({ location }) => {\n  const { data, count, offset, limit } = useFetchPokemonBaseOnUrlParams(\n    location\n  )\n\n  return (\n    <div className=\"pokemon-board\">\n      <PokemonTypes />\n      <PokemonBoardNavigation offset={offset} limit={limit} count={count} />\n      {data.map(p => (\n        <PokemonBoardItem key={p.id} {...p} />\n      ))}\n      <PokemonBoardNavigation offset={offset} limit={limit} count={count} />\n    </div>\n  )\n}\n\nexport default withRouter(PokemonBoard)\n","import React from 'react'\nimport PokemonLink from '../../../common/PokemonLink'\n\nconst PokemonEvolutionTreeJoint = ({ chain, ...otherProps }) => {\n  if (!chain) return null\n\n  const species = (chain || {}).species || {}\n\n  return (\n    <div className=\"pokemon-evolution-tree-joint\">\n      <div className=\"from-species\">\n        <PokemonLink pokemonId={species.id} name={species.name} />\n      </div>\n      <div div className=\"to-species\">\n        {chain.evolves_to.map((c, i) => (\n          <PokemonEvolutionTreeJoint key={i} chain={c} />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonEvolutionTreeJoint\n","import React from 'react'\nimport useFetchEvolutionChain from '../hooks/useFetchEvolutionChain'\nimport PokemonEvolutionTreeJoint from './PokemonEvolutionTreeJoint'\nimport './PokemonEvolutionTree.scss'\n\nconst PokemonEvolutionTree = ({ evolutionChainId }) => {\n  const { data } = useFetchEvolutionChain(evolutionChainId)\n\n  return (\n    <div className=\"pokemon-evolution-tree\">\n      <h2>Evolution Chain</h2>\n      <PokemonEvolutionTreeJoint chain={(data || {}).chain} />\n    </div>\n  )\n}\n\nexport default PokemonEvolutionTree\n","import { useState, useEffect } from 'react'\nimport { getPokemonEvolutionChain } from '../../../../api/PokeApi'\n\nexport default evolutionChainId => {\n  const [data, setData] = useState({})\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n    getPokemonEvolutionChain(evolutionChainId)\n      .then(data => {\n        setData(data)\n      })\n      .catch(() => {\n        setData({})\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [evolutionChainId])\n\n  return {\n    data,\n    loading,\n  }\n}\n","import React from 'react'\nimport numeral from 'numeral'\n\nconst getLanguageData = (languageSet, propety, language = 'en') => {\n  if (Array.isArray(languageSet)) {\n    const data = languageSet.find(x => x.language.name === language)\n\n    return data ? data[propety] : ''\n  }\n\n  return ''\n}\n\nconst getHeightString = height => {\n  const meters = height / 10\n  const realFeet = meters * 3.2808\n  const feet = Math.floor(realFeet)\n  const inches = Math.round((realFeet - feet) * 12)\n\n  return `${feet}'${numeral(inches).format('00')}\" (${numeral(meters).format(\n    '0.0'\n  )} m)`\n}\n\nconst getWeightString = pK => {\n  const kg = pK / 10\n  const nearExact = kg / 0.45359237\n  const lbs = nearExact\n\n  return `${numeral(lbs).format('0.0')} lbs (${kg} kg)`\n}\n\nconst Abilities = ({ abilities }) => {\n  if (Array.isArray(abilities)) {\n    return (\n      <ol>\n        {abilities\n          .sort((a, b) => a.slot - b.slot)\n          .map(a => {\n            return (\n              <li key={a.slot}>\n                {a.ability.name} {a.is_hidden && '(hidden)'}\n              </li>\n            )\n          })}\n      </ol>\n    )\n  }\n\n  return null\n}\n\nconst PokemonPokedexData = ({ pokemonSpecies, pokemon }) => {\n  if (!pokemonSpecies || !pokemon) return null\n\n  return (\n    <div className=\"pokedex-data\">\n      <h2>Pokédex data</h2>\n\n      <table>\n        <tr>\n          <th>National №</th>\n          <td>{numeral(pokemon.id).format('000')}</td>\n        </tr>\n        <tr>\n          <th>Type</th>\n          <td>{getLanguageData(pokemonSpecies.genera, 'genus')}</td>\n        </tr>\n        <tr>\n          <th>Species</th>\n          <td>{pokemon.types.map(t => t.type.name).join(', ')}</td>\n        </tr>\n        <tr>\n          <th>Height</th>\n          <td>{getHeightString(pokemon.height)}</td>\n        </tr>\n        <tr>\n          <th>Weight</th>\n          <td>{getWeightString(pokemon.weight)}</td>\n        </tr>\n        <tr>\n          <th>Abilities</th>\n          <td>\n            <Abilities abilities={pokemon.abilities} />\n          </td>\n        </tr>\n      </table>\n    </div>\n  )\n}\n\nexport default PokemonPokedexData\n","import React from 'react'\n\nconst StatsItem = ({ name, value, maxValue = 100 }) => {\n  return (\n    <div className=\"stats-item\">\n      <div className=\"stat-name\">{name}</div>\n      <div className=\"stat-value\">{value}</div>\n      <div className=\"stat-graph\">\n        <div className=\"graph-container\">\n          <div\n            className=\"graph\"\n            style={{ width: (value / maxValue) * 100 + '%' }}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst PokemonBaseStats = ({ stats }) => {\n  if (!stats) return null\n\n  const maxValue = Math.max(...stats.map(s => s.base_stat))\n\n  return (\n    <div className=\"pokemon-base-stats\">\n      <h2>Base Stats</h2>\n      <div className=\"stats-container\">\n        {stats.map(s => (\n          <StatsItem\n            name={s.stat.name}\n            value={s.base_stat}\n            maxValue={maxValue}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonBaseStats\n","import React from 'react'\nimport { ClipLoader } from 'react-spinners'\nimport { withRouter } from 'react-router'\nimport PokemonEvolutionTree from './pokemon-evolution-tree'\nimport PokemonPokedexData from './PokemonPokedexData'\nimport PokemonSmallAvatar from '../../common/PokemonAvatar'\nimport PokemonBaseStats from './PokemonBaseStats'\nimport useFetchPokemonDetails from './hooks/useFetchPokemonDetails'\nimport './PokemonDetails.scss'\n\nconst PokemonDetails = ({ match }) => {\n  const { pokemonSpecies, pokemon, loading } = useFetchPokemonDetails(\n    match.params.id\n  )\n\n  if (loading) {\n    return (\n      <ClipLoader\n        sizeUnit={'px'}\n        size={150}\n        color={'#123abc'}\n        loading={loading}\n      />\n    )\n  }\n\n  return (\n    <div className=\"pokemon-details\">\n      <div className=\"flex-container\">\n        <PokemonSmallAvatar pokemonId={(pokemon || {}).id} showNumber={false} />\n        <PokemonPokedexData pokemon={pokemon} pokemonSpecies={pokemonSpecies} />\n      </div>\n      <PokemonBaseStats stats={(pokemon || {}).stats || []} />\n      <PokemonEvolutionTree\n        evolutionChainId={((pokemonSpecies || {}).evolution_chain || {}).id}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(PokemonDetails)\n","import { useState, useEffect } from 'react'\nimport { getPokemonSpecies, getPokemon } from '../../../../api/PokeApi'\n\nexport default pokemonId => {\n  const [pokemonSpecies, setPokemonSpecies] = useState({})\n  const [pokemon, setPokemon] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (!pokemonId) {\n      setLoading(false)\n      return\n    }\n\n    setLoading(true)\n    Promise.all([getPokemonSpecies(pokemonId), getPokemon(pokemonId)])\n      .then(([pokemonSpecies, pokemon]) => {\n        setPokemonSpecies(pokemonSpecies)\n        setPokemon(pokemon)\n      })\n      .catch(() => {\n        setPokemonSpecies(null)\n        setPokemon(null)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [pokemonId])\n\n  return {\n    pokemonSpecies,\n    pokemon,\n    loading,\n  }\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport PokemonBoard from './routes/pokemon-board'\nimport PokemonDetails from './routes/pokemon-details'\n\nconst AppRouter = ({ children }) => {\n  return (\n    <Router>\n      {children}\n\n      <Route path=\"/\" component={PokemonBoard} exact />\n      <Route path=\"/pokemon/\" component={PokemonBoard} exact />\n      <Route path=\"/pokemon/:id\" component={PokemonDetails} exact />\n    </Router>\n  )\n}\n\nexport default AppRouter\n","import React from 'react'\nimport AppRouter from './AppRouter'\nimport './App.scss'\n\nfunction App() {\n  return (\n    <div className=\"app-root\">\n      <AppRouter />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}